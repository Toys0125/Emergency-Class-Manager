Emergency Class Manager Design Document
By: Katie Hoskins, Tanya Peacock, Marcus Strange
________________
Project Name
This project is meant to be used by schools during emergency situations or drills for emergency situations. It will be used for teachers to manage classes during these stressful situations, therefore, we are calling it the Emergency Class Manager.
Group Members
Katie Hoskins - Developer
Tanya Peacock - Developer
Marcus Strange - Developer
Revised Requirements
See Emergency Class Manager - Requirements.pdf for a more detailed description.
Design Description
        The front-end design of our project is going to be created using Vue.js. This is a framework that will allow us to create the design of the website completely. On the website there will be multiple pages; some pages differ from the teacher to admin and some will be the same. When the user loads up to the website they will be brought to the home page. This is before sign-in or registration. The page will consist of a logo, a drop down navigation menu, and an “About” section to inform users of what the website is for. The navigation menu will have only three clickable items that consist of “Sign-In”, “Register”, or “Contact”. On click of the “Register” button, the user is sent to a page to register an account. On this page the user will be able to register using Google or by creating their own account via email. This will be done using Supabase documentation. Once the user creates an account using Google or inputs the required information they will press submit and the account will be created. This information on accounts will be stored in a table in Supabase for later authorization. If the user clicks the “Sign-In” button, they will be redirected to a page to sign in using Google or through the account they had previously created. The information will be input by the user and Supabase will find the account in the table and authorize the user to log in. 
All pages will have a logo at the top of the page, that will redirect the user to a dashboard page, and a drop down navigation menu with six clickable icons consisting of “Account”, “Roster”, “Events”, “Classes”, “Contact Info”, “Admin Panel”, and “Sign Out”. Administration will be able to use all icons and teachers will be able to click the first five icons, “Account”, “Roster”, “Events”, “Classes”, and “Contact Info”. Once a user has registered an account or logged in, they will be sent to a dashboard page. This page will consist of a lo89go, a navigation menu, and a “Scheduled Events” box. This box will contain information about upcoming events for the week, if there are any. This will be categorized by date, time, and type of drill. If there are no events scheduled for that week, it will say “No Events Scheduled”. The events information will be collected from the Supabase table after administration submits the events for that week. 
On click of the “Account” button, the user will be sent to a fully editable account page. This page will consist of all the information for the account including “Name”, “Email”, an optional “Phone Number”, and an optional “Emergency Contact”. Once the user has edited the information in the “Account” page, they can click the “Submit” button. This button will prompt the user with a dialog box asking “Are you sure you want to submit?”. If they click “Okay”, the information will be updated in the “Users” table and updated on the page. If the user clicks “Cancel”, the changes will not be saved and they will be reverted. No information will be updated in the “Users” table.
On click of the “Roster” button, the user will get sent to a page consisting of an editable table. The table will be stored in Supabase. The table will consist of “Student ID”, “Last Name”, “First Name”, and “Presence”. The “Student ID”, “Last Name”, and “First Name” columns will be able to be sorted by ascending or descending order. The “Presence” column will consist of a drop down menu for each student with labels, “P” for present, “A” for absent, “M” for missing, and “V” for visiting. There will also be a checkbox at the bottom of the table that the user can click and fill in all dropdown boxes at “P”. The bottom row of the table will be blank for students who are visiting. Teachers will be able to temporarily add the student to the roster, but the information will not be saved to the “Perm Roster” table. There will be a submit button that sends the information to the “Events” page for administration to see, including the visiting students in the class. This information will be saved to the “Event Roster” table in the Supabase database including the date submitted and an updated status. The information for students who are permanently on the roster is saved in the “Perm Roster” table.
On click of the “Events” button, there will be a title for the page called “Events” and a calendar implementation. For teachers, the user will be able to click the box to view the information from the event. On click, a module will open where the teacher can view their class roster that was submitted during that event. At the top of the module will be a title for the event, a count of submissions showing if they had submitted a report from that event, a show more button where the user can view information about the event but not edit it, and a table of “Class”, “Teacher”, and an “Open” button. On click of the open button, the user will be redirected to the submitted roster for the event. The “Show More” button will open a module for the user with the event name, time of the event, and date of the event. For administration, the page will also show a calendar implementation just as the teachers. When the user clicks a date in the calendar implementation, a module will pop up with the name “Classes”. In this module will be an event name, a “Show More” button, a count of submitted rosters, a table with “Class ID”, “Class Name”, and “Teacher”, and an “Open” button for the submitted rosters that will take the user to a new page. All columns on the table are able to be sorted by ascending or descending. On click of the “Show More” button, a new module will pop up for the user that has the “Event Name”, the “Time”, and the “Date” of a new event. For administration, all fields in this box are editable. On click of the “Open” button on the “Events” page a new page would open. This page will have a list of teachers that is clickable and a search bar. When a teacher is clicked, the user will be taken to a page that shows the report that was submitted for that date. This information for upcoming and scheduled events will be saved in the Supabase table for “Events”. The “Contact Info” page will only have the name of the principal(s) as well as assistant principal(s) and their corresponding email and phone number, and rosters that have been submitted for an event are saved in the “Event Roster” table.
The Classes page is only able to be accessed by administration. This page is where administration is able to view classes as well as add and edit classes. On the Classes page there is a search bar, an “Add Class” button, a table consisting of “Class ID”, “Class Name”, and “Teacher”, and an “Edit” button for each entry in the table. All columns in the table are able to be sorted by ascending or descending. On click of the “Add Class” button, a modal will pop up for the user to add a “Class ID”, “Class Name”, and “Teacher”. All fields must be completed before submission. Once the user is ready to submit, they can click the “Submit” button and they will be prompted by a dialog box asking “Are you sure you want to submit?”. If the user clicks “Okay” the information will get saved to the “Classes” table. If the user clicks the “Cancel” button, the changes will be reverted and the new class will not be added. The user can also edit classes. If the user clicks the “Edit” button, a modal will pop up with a table with “Class Name”, “Teacher”, “Student ID”, “Last Name”, and “First Name”. All columns are able to be sorted by ascending or descending. There is an “Add Row” button, an “Add Teacher” button, and a “Submit” button. The table will hold all information as the roster with all students in the class. This also includes the class name and teacher though. This information will be saved in the “Students” and “Classes” tables. On click of the “Add Row” button, a new empty row will be added to the bottom of the row for new students to be added. On click of the “Add Teacher” a modal pops up with an “Email” label and box, a “Name” label and box, and a “Class ID” label and box. All information is required in these boxes. The email must have an “@” symbol and the name must be at least two letters. Once the user is ready to submit, they can click the “Submit” button. On click, the user is prompted with a dialog box asking “Are you sure you want to submit?”. If the user clicks the “Okay” button, the information will get saved to the “Classes” table. If the user clicks “Cancel”, the information is not saved and the changes are reverted. If the teacher finishes editing the class, they can click the “Submit” button. The user is prompted with a dialog box asking “Are you sure you want to submit?”. If the user clicks the “Okay” button, the information will get saved to the “Classes” table and the “Students” table. If the user clicks “Cancel”, the information is not saved and the changes are reverted.
The Admin Panel is a page that is specifically for admins and super admins. In the admin panel there will be a search bar, a table for “Email”, “Last Name”, and “First Name”. All three columns are able to be sorted ascending or descending. There is an “Add User” button at the bottom. The table will hold information about users on the website which are teachers and admin for that school. When the “Add User” button is clicked, a modal is opened with an “Email” label and box, “Last Name” label and box, and “First Name” label and box. When Admins are adding a user to the table they must submit a valid email, a last name, and a first name. There is a submit button at the bottom. On click of the submit button, the user is prompted with a dialog box asking if they are sure they want to submit, and then the information is added to the “Users” table in the database and saved to the table in the Admin Panel. For a super admin, it will be the same layout, but since super admin can also add an admin to the table, there is a checkbox at the bottom for admin. When checked, the user will be set the permissions for admin and that will be saved to the “Users” table. When the user wants to submit, they can click the “Submit” button. On click, the user is prompted by asking “Are you sure you want to submit?”. If the “Okay” button is clicked, the information is saved to the “Users” table. If the “Cancel” button is clicked, the information is not saved to the table and the user is not added to the school. 
Appendix
Figure 1: Block Diagram
          
________________


Figure 2: Component Diagram  
Figure 3: User-Interface Storyboard
See ECM_Storyboard.pdf in the dropbox for a more detailed description.
Figure 5: Storage Documentation